.TH CLUTTER-SEGMENTATION "JUNE 2011" 
.SH NAME

clutter-segmentation - a ROS package for recognizing objects in cluttered scenes

.SH Installation

The clutseg package is built on top of ROS packages tod_training and
tod_detecting in the object_recognition stack. It has been developed and
tested on ROS Diamondback running on a Ubuntu 10.10 Maverick Meerkat. You can
follow this recipe to get it running. It admittably requires a couple of
really nasty workarounds.

    1. Create an installation directory and open it in a terminal 

This directory is called CLUTSEG_PATH and will later contain the clutseg
repository and the required ROS overlays.

    2. git clone indefero@code.in.tum.de:clutter-segmentation.git

Your CLUTSEG_PATH directory should now contain the repository
clutter-segmentation.

    3. sudo easy_install rosinstall

If you don't have python-setuptools installed, you can also get the tool
directly from http://pypi.python.org/pypi/rosinstall

    4. tar xvzf clutter-segmentation/3rdparty/opencv_candidate.50974.tar.gz

This is a workaround for issue described on answers.ros.org, for an
explanation, see the detailed description on
http://answers.ros.org/question/1125/no-longer-able-to-checkout-opencv_candidate-in

    5. rosinstall . clutter-segmentation/clutter-segmentation.rosinstall

This will setup dependencies and ROS overlays. Hit 's' for skip when being asked
for what action to take on repository clutter-segmentation. Including it in the
clutter-segmentation.rosinstall file will make sure that clutseg is included in
the ROS environment configured via setup.bash.

    6. source setup.bash

Depending on your needs, you might add this to your ~/.bashrc file.

    7. rosdep install clutseg

    8. export CLUTSEG_PATH=$(pwd)

This environment variable is used by ROS package clutseg in various occasions
It is recommended to add this to your ~./.bashrc file.

    9. export PATH=$CLUTSEG_PATH/clutter-segmentation/scripts/script-bin:$PATH

Depending on your needs, you might add this to your ~/.bashrc file, as well.

   10. cp -r /opt/ros/diamondback/stacks/vision_opencv .

This prepares ground for OpenCV overlay that backports bugfixes.

   11. rm vision_opencv/opencv2/ROS_NOBUILD

   12. rm vision_opencv/cv_bridge/ROS_NOBUILD

   13. mods-link

Apply patches on tod_training, tod_detecting, rbrief, fiducial and some other
places where serious bugs were blocking progress or blackbox behaviour was
blocking the gain of valuable information.

   14. rosmake --rosdep-install clutseg

   15. Install RSQlite

You can get it from http://cran.r-project.org/web/packages/RSQLite, as this R
package is not prepackaged for Ubuntu Meerkat. Follow the installation
instructions on the website.

.SH Running tests

Since clutter-segmentation has been developed against unstable and not exactly
bug-free packages, there are quite a bunch of tests available that test for
functionality and regression in package clutseg and its not-exactly reliable
dependencies. Some of these tests require Gigabytes of test data that have not
been included in the repository. Some smaller test data has been included, and
other tests do not require any test data to run. You can compile the tests 
(standard for ROS packages) via

    make tests

and run them by calling

    make test

You can also run single tests via

   bin/utest --gtest_filter=ParamSelTest.*

or another example

   bin/utest --gtest_filter=ConnCompTest.FillSmallConnectedComponents

for running only a specific test.

