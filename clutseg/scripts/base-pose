#!/usr/bin/env bash

function usage() {
    print_usage "base-pose" "base" "[--no-fix]" "[--leave-fix]" "[--debug]"
    cat <<USAGE
Estimates object pose from images with fiducial markers in directory <base>.

--no-fix        if given no pre-processed alternative images will provided and
                existing alternative images for pose estimations will be removed.
            
--leave-fix     if given will not create alternative images but leave existing
                ones untouched.  An alternative image designed as a fallback
                for pose_estimator of tod_training has the name <image>.pre.pose.png. 
USAGE
}

source $(rospack find clutseg)/scripts/common

expect_arg 0
base=$(get_arg 0)

if has_opt --debug ; then
    debug="gdb --args "
fi

pushd $base > /dev/null
    assert_base
    for d in *; do
        assert_base
        if [ -d $d ]; then
            subj=$(basename $d)
            echo "Estimating poses for $subj"
            echo "--------------------------------------------------------"
            pushd $subj >/dev/null
                if has_no_opt --no-fix && has_no_opt --leave-fix; then
                    for img in image_?????.png ; do
                        echo "Generating alternative training image for $subj/$img ..."
                        convert -monochrome $img $img.pre.pose.png
                    done
                elif ! has_opt --leave-fix ; then
                    rm *.pre.pose.png
                fi
            popd > /dev/null
            echo "Running tod_training pose estimator..."
            # only run with one job, seems to be some racing condition
            # but I did not attempt to find the bug
            # rosrun tod_training pose_estimator -d $subj -j1
            $debug $(rospack find tod_training)/bin/pose_estimator -d $subj -j1 --verbose=0
       fi
    done
popd > /dev/null
