objrec2d                                                                 README
-------------------------------------------------------------------------------
This is an experimental setup to test the capabilities of ROS packages
tod_training and tod_detection in stack object_recognition below svn path
/branches/trunk_diamondback/stacks in wg-ros-pkg. In order to setup the
environment for this experiment, cd to this directory in a terminal and call

    $ rosinstall . /opt/ros/diamondback

and then

    $ source setup.bash

Compile by calling (e.g.)

    $ rosmake tod_training
    $ rosmake tod_detecting

The two most interesting packages are 'tod_training' and 'tod_detection'. There
are tutorials available, see http://www.ros.org/wiki/tod_training/Tutorials and
http://www.ros.org/wiki/tod_detecting/Tutorials. These tutorials also provide
links to testing data and how to test the packages for the impatient.


Generating a training base 
-------------------------------------------------------------------------------
The tutorial http://www.ros.org/wiki/tod_training/Tutorials/BaseCreation
explains how to create a training base. According to this tutorial, the
training objects are assumed to have a fiducial marker rigidly attached to
them.  This might create problems when we try to use existing databases with
images that actually do not contain any fiducial marker. The tutorial also
expects ROS bags that contain synchronized messages of certain types.
Unfortunately, it seems that it's only the topic names listed but not the data
types. Inspecting the sample data using rosbag info show the different kinds of
data that might have to be included in training data:

camera_info   sensor_msgs/CameraInfo 
image         sensor_msgs/Image      
image_mono    sensor_msgs/Image      
points2       sensor_msgs/PointCloud2
tf            tf/tfMessage 


There are some ROS bags available that can be used for training purposes.

    $ wget http://vault.willowgarage.com/wgdata1/vol1/tod_kinect_bags/training/fat_free_milk.bag
    $ wget http://vault.willowgarage.com/wgdata1/vol1/tod_kinect_bags/training/fat_free_milk.tf.bag
    
Get some configuration data for training, edit config.txt to specify all available bags.

    $ wget http://vault.willowgarage.com/wgdata1/vol1/tod_kinect_bags/training/fiducial.yml
    $ wget http://vault.willowgarage.com/wgdata1/vol1/tod_kinect_bags/training/config.yaml
    $ wget http://vault.willowgarage.com/wgdata1/vol1/tod_kinect_bags/training/config.txt
    $ wget http://vault.willowgarage.com/wgdata1/vol1/tod_kinect_bags/training/features.config.yaml
    $ wget http://vault.willowgarage.com/wgdata1/vol1/tod_kinect_bags/training/README

Extract the bag file using 

    $ rosrun tod_training dump_all.py bags base

and generate the training data base using
  
    # these two configuration files are required for training 
    $ cp bags/fiducial.yml base/
    $ cp bags/config.yaml base/
    $ cp bags/features.config.yaml base/
    $ cd base
    $ rosrun tod_training train_all.sh
    # finally need config.txt which lists files
    # this shouldn't be necessary and config.txt contains
    # duplicate information
    $ cp bags/config.txt base/config.txt
The tutorial describing how to generate bags for training is unfortunately just an empty stub.
